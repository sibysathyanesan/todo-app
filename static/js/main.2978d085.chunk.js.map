{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","getStyle","backgroundColor","padding","borderBottom","textDecoration","props","todo","completed","this","id","title","style","type","onChange","markComplete","bind","btnStyle","onClick","deleteTodo","Component","background","color","border","borderRadius","float","cursor","Todos","todos","map","headerStyle","textAlign","linkStyle","Header","to","AddTodo","state","handleOnChange","e","setState","target","name","value","handleOnSubmit","preventDefault","addTodo","display","onSubmit","placeholder","flex","className","About","Fragment","App","axios","delete","then","res","filter","post","data","get","basename","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2978d085.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n\n    getStyle = () => {\n        return {\n            backgroundColor : '#f4f4f4',\n            padding: '15px',\n            borderBottom: '1px #ab8683 solid',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    }\n\n    render() {\n        const {id, title} = this.props.todo;\n        return (\n            <div style={this.getStyle()}>\n                <p>\n                    <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} /> {' '} { title }\n                    <button style={btnStyle} onClick={this.props.deleteTodo.bind(this, id)}>X</button>\n                </p>\n            </div>\n        )\n    }\n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired\n}\n\nconst btnStyle = {\n    background: '#ff0000',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 8px',\n    borderRadius: '50%',\n    float: 'right',\n    cursor: 'pointer'\n}\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n\n    render() {\n        return this.props.todos.map((todo) => (\n                <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} deleteTodo={this.props.deleteTodo}/>\n            ));\n    }\n\n}\n\n//PropTypes\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired\n}\n\nexport default Todos;","import React from 'react';\nimport { Link } from 'react-router-dom';\nfunction Header() {\n    return (\n        <header style = {headerStyle}>\n            <h1> TodoList</h1>\n            <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\n        </header>\n    )\n}\n\nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n}\n\nconst linkStyle = {\n    color: '#ffff'\n}\nexport default Header;","import React, { Component } from 'react'\n\nexport class AddTodo extends Component {\n    \n    state = {\n        title: ''\n    }\n\n    handleOnChange = (e) => {\n            // if state variable and input:type name are different \n            // this.setState({ title: e.target.value });\n\n        // if state variable and input:type name are same \n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleOnSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({ title: '' });\n    }\n\n    render() {\n        return (\n            <form style={{ display: 'flex' }}  onSubmit={this.handleOnSubmit} >\n                <input type=\"text\" name=\"title\" placeholder=\"Add to do\" style={{ flex: '10', padding: '6px'}} value={this.state.title} onChange={this.handleOnChange} />\n                <input type=\"submit\" value=\"Submit\" style={{ flex:'2' }} className=\"btn\"/>\n            </form>\n        )\n    }\n}\n\nexport default AddTodo;\n","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n            <React.Fragment>\n                <h1>About</h1>\n                <p>This a app created for learning purpose</p>\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default About;","import './App.css';\nimport React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n      axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({todos: res.data}))\n  }\n\n  // Toggle complete\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map( todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    })\n    });\n  }\n\n  // Delete todo\n  deleteTodo = (id) => {\n    /* this.setState({ todos: this.state.todos.filter( todo => {\n      return todo.id !== id;\n      })\n    }); */\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id }`)\n      .then(res => this.setState({ todos: [...this.state.todos.filter( todo => todo.id !== id )] }))\n  }\n\n  // Add todo\n  addTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }))\n  }\n\n  render() {\n    //console.log(this.state.todos);\n    return (\n      <HashRouter basename='/'>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos todos={this.state.todos}  markComplete={this.markComplete} deleteTodo={this.deleteTodo}/>\n              </React.Fragment>\n            )} />\n            <Route exact path=\"/about\" component={About} />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}